{"ast":null,"code":"import _toConsumableArray from\"/home/michael/blackjack/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/michael/blackjack/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/michael/blackjack/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/michael/blackjack/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/michael/blackjack/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'./index.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var cardWidth=70;var cardHeight=94;var values=['2','3','4','5','6','7','8','9','T','J','K','Q','A'];var suits=['H','C','D','S'];function Card(props){var xOffset=0;var yOffset=0;if('value'in props&&props.value.length===2){xOffset=values.indexOf(props.value[0],0)+1;yOffset=suits.indexOf(props.value[1],0);}return/*#__PURE__*/_jsx(\"div\",{className:\"Card\",style:{backgroundImage:'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',width:cardWidth+'px',height:cardHeight+'px',overflow:'hidden',backgroundPosition:-xOffset*cardWidth+'px '+-yOffset*cardHeight+'px'}});}function dealHand(arr,player){var out=[];for(var i=0;i<arr.length;i++){out.push(/*#__PURE__*/_jsx(Card,{value:arr[i]},(player?'Player':'Dealer')+i));}return out;}function Hit(props){return/*#__PURE__*/_jsxs(\"div\",{onClick:props.onClick,children:[/*#__PURE__*/_jsx(\"b\",{children:\"Hit\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Card,{})]});}function Stand(props){return/*#__PURE__*/_jsxs(\"div\",{onClick:props.onClick,children:[/*#__PURE__*/_jsx(\"b\",{children:\"Stand\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Card,{})]});}var Table=/*#__PURE__*/function(_React$Component){_inherits(Table,_React$Component);var _super=_createSuper(Table);function Table(props){var _this;_classCallCheck(this,Table);_this=_super.call(this,props);_this.sleep=function(milliseconds){return new Promise(function(resolve){return setTimeout(resolve,milliseconds);});};var deck=_toConsumableArray(Array(52).keys());deck=_this.shuffleDeck(deck);_this.state={deck:deck,dealerHand:[],playerHand:[],isStanding:false,dealerStanding:false};_this.state.playerHand.push(_this.getCard(_this.state.deck.pop()));_this.state.playerHand.push(_this.getCard(_this.state.deck.pop()));_this.state.dealerHand.push(_this.getCard(_this.state.deck.pop())+'H');_this.state.dealerHand.push(_this.getCard(_this.state.deck.pop()));var temp=_this.state.dealerHand;var dealerScore=_this.calculateScore(temp,true);if(dealerScore===21||_this.calculateScore(_this.state.playerHand,true)===21){temp[0]=temp[0].slice(0,-1);_this.state.dealerHand=temp;_this.state.isStanding=true;_this.state.dealerStanding=dealerScore===21;}return _this;}_createClass(Table,[{key:\"shuffleDeck\",value:function shuffleDeck(arr){var shuffled=[];while(arr.length>0){var index=Math.floor(Math.random()*arr.length);var next=arr.splice(index,1);shuffled.push(next[0]);}return shuffled;}},{key:\"calculateScore\",value:function calculateScore(arr,addHidden){var score=0;var aces=0;for(var i=0;i<arr.length;i++){// Don't include hidden value\nif(!addHidden&&arr[i].length>2){continue;}var val=arr[i][0];if(!isNaN(val)){score+=parseInt(val);}else if(val!=='A'){score+=10;}else{aces+=1;}}while(aces>0){// Add 11 if it's the last ace and it still fits\nif(aces===1&&score+11<=21){score+=11;}else{score+=1;}aces--;}return score;}},{key:\"getScoreString\",value:function getScoreString(arr){var out='';var score=this.calculateScore(arr,false);if(score===21){out='Blackjack!';}else if(score>21){out='Bust!';}else{if(arr[0].length>2){out+='>';}out+=score.toString();}return out;}},{key:\"getCard\",value:function getCard(cardVal){var suit=Math.floor(cardVal/13);var value=cardVal%13;var out=values[value]+suits[suit];return out;}},{key:\"handleHit\",value:function handleHit(){var hand=this.state.playerHand;if(this.state.isStanding||this.calculateScore(this.state.dealerHand,true)===21||this.calculateScore(hand,true)>=21){return;}var deck=this.state.deck;hand.push(this.getCard(deck.pop()));var dealer=this.state.dealerHand;var blackjack=this.calculateScore(hand,true)===21;var bust=this.calculateScore(hand,true)>21;if(this.calculateScore(hand,true)>=21){dealer[0]=dealer[0].slice(0,2);}this.setState({deck:deck,playerHand:hand,dealerHand:dealer,isStanding:blackjack||bust,dealerStanding:bust});}},{key:\"handleStand\",value:function handleStand(){if(this.state.isStanding||this.calculateScore(this.state.playerHand,false)>=21){return;}var temp=this.state.dealerHand;temp[0]=temp[0].slice(0,2);this.setState({deck:this.state.deck,dealerHand:temp,playerHand:this.state.playerHand,isStanding:true,dealerStanding:this.state.dealerStanding});}},{key:\"getStateText\",value:function getStateText(){var out='';var playerScore=this.calculateScore(this.state.playerHand,true);var dealerScore=this.calculateScore(this.state.dealerHand,true);if(!this.state.isStanding||!this.state.dealerStanding){return out;}if(playerScore>dealerScore){out='You Win!';}else{out='Dealer Wins!';}if(playerScore===21&&dealerScore===21){out='Draw!';}if(playerScore>21){out='Dealer Wins!';}else if(dealerScore>21){out='You Win!';}return out;}},{key:\"hitDealer\",value:function hitDealer(){var _this2=this;var hand=this.state.dealerHand;var deck=this.state.deck;if(this.calculateScore(hand,true)<17&&this.calculateScore(hand,true)<this.calculateScore(this.state.playerHand,true)){hand.push(this.getCard(deck.pop()));}var stand=this.calculateScore(hand,true)>=17||this.calculateScore(hand,true)>=this.calculateScore(this.state.playerHand,true);this.sleep(1000).then(function(r){_this2.setState({deck:deck,playerHand:_this2.state.playerHand,dealerHand:hand,isStanding:_this2.state.isStanding,dealerStanding:stand});});}},{key:\"componentDidMount\",value:function componentDidMount(){if(this.state.isStanding&&!this.state.dealerStanding){this.hitDealer();}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.state.isStanding&&!this.state.dealerStanding){this.hitDealer();}}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Hand\",children:[/*#__PURE__*/_jsxs(\"b\",{children:[\"You: \",this.getScoreString(this.state.playerHand)]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{children:dealHand(this.state.playerHand,true)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Dealer\",children:[/*#__PURE__*/_jsx(\"div\",{children:dealHand(this.state.dealerHand,false)}),/*#__PURE__*/_jsxs(\"b\",{children:[\"Dealer: \",this.getScoreString(this.state.dealerHand)]}),/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Hit\",children:/*#__PURE__*/_jsx(Hit,{onClick:function onClick(){return _this3.handleHit();}})}),/*#__PURE__*/_jsx(\"div\",{className:\"Stand\",children:/*#__PURE__*/_jsx(Stand,{onClick:function onClick(){return _this3.handleStand();}})}),/*#__PURE__*/_jsx(\"div\",{className:\"EndText\",children:/*#__PURE__*/_jsx(\"b\",{children:this.getStateText()})})]});}}]);return Table;}(React.Component);var Game=/*#__PURE__*/function(_React$Component2){_inherits(Game,_React$Component2);var _super2=_createSuper(Game);function Game(){_classCallCheck(this,Game);return _super2.apply(this,arguments);}_createClass(Game,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Window\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Table\",children:/*#__PURE__*/_jsx(Table,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"Reset\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return window.location.reload(false);},children:\"New Game\"})})]});}}]);return Game;}(React.Component);export default Game;","map":{"version":3,"sources":["/home/michael/blackjack/src/Game/index.js"],"names":["React","cardWidth","cardHeight","values","suits","Card","props","xOffset","yOffset","value","length","indexOf","backgroundImage","width","height","overflow","backgroundPosition","dealHand","arr","player","out","i","push","Hit","onClick","Stand","Table","sleep","milliseconds","Promise","resolve","setTimeout","deck","Array","keys","shuffleDeck","state","dealerHand","playerHand","isStanding","dealerStanding","getCard","pop","temp","dealerScore","calculateScore","slice","shuffled","index","Math","floor","random","next","splice","addHidden","score","aces","val","isNaN","parseInt","toString","cardVal","suit","hand","dealer","blackjack","bust","setState","playerScore","stand","then","r","hitDealer","getScoreString","handleHit","handleStand","getStateText","Component","Game","window","location","reload"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './index.css';\n\nconst cardWidth = 70;\nconst cardHeight = 94;\n\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'K', 'Q', 'A']\nconst suits = ['H', 'C', 'D', 'S'];\n\nfunction Card(props) {\n    var xOffset = 0;\n    var yOffset = 0;\n\n    if ('value' in props && props.value.length === 2) {\n        xOffset = values.indexOf(props.value[0], 0) + 1;\n        yOffset = suits.indexOf(props.value[1], 0);\n    }\n    \n    return (\n        <div\n         className='Card'\n         style={{backgroundImage: 'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',\n                 width: cardWidth + 'px',\n                 height: cardHeight + 'px',\n                 overflow: 'hidden',\n                 backgroundPosition: -xOffset * cardWidth + 'px ' + -yOffset * cardHeight + 'px'\n               }}\n        />\n    );\n}\n\nfunction dealHand(arr, player) {\n    var out = [];\n    for (var i = 0; i < arr.length; i++) {\n        out.push(<Card key={(player ? 'Player' : 'Dealer') + i} value={arr[i]} />);\n    }\n    return (out);\n}\n\nfunction Hit(props) {\n    return (\n        <div onClick={props.onClick}>\n         <b>Hit</b><br />\n         <Card />\n        </div>\n    );\n}\n\nfunction Stand(props) {\n    return (\n        <div onClick={props.onClick}>\n         <b>Stand</b><br />\n         <Card />\n        </div>\n    );\n}\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        var deck = [...Array(52).keys()]\n        deck = this.shuffleDeck(deck);\n        this.state = {\n            deck: deck,\n            dealerHand: [],\n            playerHand: [],\n            isStanding: false,\n            dealerStanding: false,\n        };\n\n        this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n        this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n        \n        this.state.dealerHand.push(this.getCard(this.state.deck.pop()) + 'H');\n        this.state.dealerHand.push(this.getCard(this.state.deck.pop()));\n\n        var temp = this.state.dealerHand;\n        var dealerScore = this.calculateScore(temp, true);\n        if (dealerScore === 21 || this.calculateScore(this.state.playerHand, true) === 21) {\n            temp[0] = temp[0].slice(0,-1);\n            this.state.dealerHand = temp;\n            this.state.isStanding = true;\n            this.state.dealerStanding = dealerScore === 21;\n        }\n    }\n\n    shuffleDeck(arr) {\n        var shuffled = [];\n\n        while (arr.length > 0) {\n            var index = Math.floor(Math.random() * arr.length);\n            var next = arr.splice(index, 1);\n            shuffled.push(next[0]);\n        }\n        return shuffled;\n    }\n\n    calculateScore(arr, addHidden) {\n        var score = 0;\n        var aces = 0;\n        for (var i = 0; i < arr.length; i++) {\n            // Don't include hidden value\n            if (!addHidden && arr[i].length > 2) {\n                continue;\n            }\n            var val = arr[i][0];\n            if (!isNaN(val)) {\n                score += parseInt(val);\n            } \n            else if (val !== 'A') {\n                score += 10;\n            }\n            else {\n                aces += 1\n            }\n\n        }\n\n        while (aces > 0) {\n            // Add 11 if it's the last ace and it still fits\n            if (aces === 1 && (score + 11) <= 21) {\n                score += 11;\n            }\n            else {\n                score += 1;\n            }\n            aces--;\n        }\n\n        return score;\n    }\n\n    getScoreString(arr) {\n        var out = '';\n        var score = this.calculateScore(arr, false);\n\n        if (score === 21) {\n            out = 'Blackjack!';\n        }\n        else if (score > 21) {\n            out = 'Bust!'\n        }\n        else {\n            if (arr[0].length > 2) {\n                out += '>';\n            }\n            out += score.toString();\n        }\n        return out;\n    }\n\n    getCard(cardVal) {\n        var suit = Math.floor(cardVal / 13);\n        var value = cardVal % 13;\n        var out = values[value] + suits[suit]\n        return out;\n    }\n\n    handleHit() {\n        var hand = this.state.playerHand;\n        if (this.state.isStanding ||\n            this.calculateScore(this.state.dealerHand, true) === 21 ||\n            this.calculateScore(hand, true) >= 21) {\n            return;\n        }\n\n        var deck = this.state.deck;\n        hand.push(this.getCard(deck.pop()));\n\n        var dealer = this.state.dealerHand;\n        var blackjack = this.calculateScore(hand, true) === 21;\n        var bust = this.calculateScore(hand, true) > 21;\n        if (this.calculateScore(hand, true) >= 21) {\n            dealer[0] = dealer[0].slice(0, 2);\n        }\n        this.setState({\n            deck: deck,\n            playerHand: hand,\n            dealerHand: dealer,\n            isStanding: blackjack || bust,\n            dealerStanding: bust,\n        });\n    }\n\n    handleStand() {\n        if (this.state.isStanding ||\n            this.calculateScore(this.state.playerHand, false) >= 21) {\n            return;\n        }\n        var temp = this.state.dealerHand;\n        temp[0] = temp[0].slice(0, 2);\n        this.setState({                        \n            deck: this.state.deck,                        \n            dealerHand: temp, \n            playerHand: this.state.playerHand, \n            isStanding: true, \n            dealerStanding: this.state.dealerStanding,\n        });                                    \n    }\n\n    getStateText() {\n        var out = '';\n\n        var playerScore = this.calculateScore(this.state.playerHand, true);\n        var dealerScore = this.calculateScore(this.state.dealerHand, true);\n\n        if (!this.state.isStanding || !this.state.dealerStanding) {\n            return out;\n        }\n        if (playerScore > dealerScore) {\n            out = 'You Win!';\n        }\n        else {\n            out = 'Dealer Wins!';\n        }\n\n        if (playerScore === 21 && dealerScore === 21) {\n            out = 'Draw!';\n        }\n\n        if (playerScore > 21) {\n            out = 'Dealer Wins!';\n        }\n        else if (dealerScore > 21) {\n            out = 'You Win!';\n        }\n\n        return out;\n    }\n\n    sleep = (milliseconds) => {\n        return new Promise(resolve => setTimeout(resolve, milliseconds))\n    }\n\n    hitDealer() {\n        var hand = this.state.dealerHand;\n        var deck = this.state.deck;\n        if (this.calculateScore(hand, true) < 17 &&\n            this.calculateScore(hand, true) < this.calculateScore(this.state.playerHand, true)) {\n            hand.push(this.getCard(deck.pop()));\n        }\n        var stand = this.calculateScore(hand, true) >= 17 ||\n                    this.calculateScore(hand, true) >= this.calculateScore(this.state.playerHand, true);\n        this.sleep(1000).then(r => {\n            this.setState({\n                deck: deck,\n                playerHand: this.state.playerHand,\n                dealerHand: hand,\n                isStanding: this.state.isStanding,\n                dealerStanding: stand,\n            });\n        });\n    }\n\n    componentDidMount() {\n        if (this.state.isStanding && !this.state.dealerStanding) {\n            this.hitDealer();\n        }\n    }\n\n    componentDidUpdate() {\n        if (this.state.isStanding && !this.state.dealerStanding) {\n            this.hitDealer();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n             <div className='Hand'>\n              <b>You: {this.getScoreString(this.state.playerHand)}</b><br />\n              <div>\n               {dealHand(this.state.playerHand, true)}\n              </div>\n             </div>\n             <div className='Dealer'>\n              <div>\n               {dealHand(this.state.dealerHand, false)}\n              </div>\n              <b>Dealer: {this.getScoreString(this.state.dealerHand)}</b><br />\n             </div>\n             <div className='Hit'>\n              <Hit onClick={() => this.handleHit()} />\n             </div>\n             <div className='Stand'>\n              <Stand  onClick={() => this.handleStand()} />\n             </div>\n             <div className='EndText'>\n              <b>{this.getStateText()}</b>\n             </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className='Window'>\n             <div className='Table'>\n              <Table /> \n             </div>\n             <div className='Reset'>\n              <button onClick={() => window.location.reload(false)}>New Game</button>\n             </div>\n            </div>\n        );\n    }\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}