{"ast":null,"code":"var _jsxFileName = \"/home/michael/blackjack/src/Game/index.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 70;\nconst cardHeight = 94;\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'K', 'Q', 'A'];\nconst suits = ['H', 'C', 'D', 'S'];\n\nfunction Card(props) {\n  var xOffset = 0;\n  var yOffset = 0;\n\n  if ('value' in props) {\n    xOffset = values.indexOf(props.value[0], 0) + 1;\n    yOffset = suits.indexOf(props.value[1], 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"Card\",\n    style: {\n      'background-image': 'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',\n      width: cardWidth + 'px',\n      height: cardHeight + 'px',\n      overflow: 'hidden',\n      'background-position': -xOffset * cardWidth + 'px ' + -yOffset * cardHeight + 'px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Card;\n\nclass Deck extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"Game\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          value: values[Math.floor(Math.random() * values.length)] + suits[Math.floor(Math.random() * suits.length)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          value: values[Math.floor(Math.random() * values.length)] + suits[Math.floor(Math.random() * suits.length)]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/home/michael/blackjack/src/Game/index.js"],"names":["React","cardWidth","cardHeight","values","suits","Card","props","xOffset","yOffset","indexOf","value","width","height","overflow","Deck","Component","render","Game","Math","floor","random","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,UAAU,GAAG,EAAnB;AAEA,MAAMC,MAAM,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,GAApC,EAAyC,GAAzC,EAA8C,GAA9C,EAAmD,GAAnD,EAAwD,GAAxD,EAA6D,GAA7D,CAAf;AACA,MAAMC,KAAK,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAd;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACjB,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;;AAEA,MAAI,WAAWF,KAAf,EAAsB;AAClBC,IAAAA,OAAO,GAAGJ,MAAM,CAACM,OAAP,CAAeH,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAf,EAA+B,CAA/B,IAAoC,CAA9C;AACAF,IAAAA,OAAO,GAAGJ,KAAK,CAACK,OAAN,CAAcH,KAAK,CAACI,KAAN,CAAY,CAAZ,CAAd,EAA8B,CAA9B,CAAV;AACH;;AAED,sBACI;AACC,IAAA,KAAK,EAAC,MADP;AAEC,IAAA,KAAK,EAAE;AAAC,0BAAoB,iFAArB;AACCC,MAAAA,KAAK,EAAEV,SAAS,GAAG,IADpB;AAECW,MAAAA,MAAM,EAAEV,UAAU,GAAG,IAFtB;AAGCW,MAAAA,QAAQ,EAAE,QAHX;AAIC,6BAAuB,CAACN,OAAD,GAAWN,SAAX,GAAuB,KAAvB,GAA+B,CAACO,OAAD,GAAWN,UAA1C,GAAuD;AAJ/E;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;KApBQG,I;;AAsBT,MAAMS,IAAN,SAAmBd,KAAK,CAACe,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YADJ;AAIH;;AAN8B;;AASnC,MAAMC,IAAN,SAAmBjB,KAAK,CAACe,SAAzB,CAAmC;AAC/BC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACC;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eACO,QAAC,IAAD;AAAM,UAAA,KAAK,EAAEb,MAAM,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,MAAM,CAACkB,MAAlC,CAAD,CAAN,GAAoDjB,KAAK,CAACc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,KAAK,CAACiB,MAAjC,CAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,gBADP,eAEC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAEO,QAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,MAAM,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBjB,MAAM,CAACkB,MAAlC,CAAD,CAAN,GAAoDjB,KAAK,CAACc,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBhB,KAAK,CAACiB,MAAjC,CAAD;AAAtE;AAAA;AAAA;AAAA;AAAA,gBAFP;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAKC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAX8B;;AAanC,eAAeJ,IAAf","sourcesContent":["import React from 'react'\n\nconst cardWidth = 70;\nconst cardHeight = 94;\n\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'K', 'Q', 'A']\nconst suits = ['H', 'C', 'D', 'S'];\n\nfunction Card(props) {\n    var xOffset = 0;\n    var yOffset = 0;\n\n    if ('value' in props) {\n        xOffset = values.indexOf(props.value[0], 0) + 1;\n        yOffset = suits.indexOf(props.value[1], 0);\n    }\n    \n    return (\n        <div\n         class='Card'\n         style={{'background-image': 'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',\n                 width: cardWidth + 'px',\n                 height: cardHeight + 'px',\n                 overflow: 'hidden',\n                 'background-position': -xOffset * cardWidth + 'px ' + -yOffset * cardHeight + 'px'\n               }}\n        />\n    );\n}\n\nclass Deck extends React.Component {\n    render() {\n        return (\n            <Card />\n        );\n        \n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div class='Game'>\n             <table>\n              <tr /><Card value={values[Math.floor(Math.random() * values.length)] + suits[Math.floor(Math.random() * suits.length)]} />\n              <tr /><Card value={values[Math.floor(Math.random() * values.length)] + suits[Math.floor(Math.random() * suits.length)]} />\n             </table>\n             <Deck />\n            </div>\n        );\n    }\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}