{"ast":null,"code":"var _jsxFileName = \"/home/michael/blackjack/src/Game/index.js\";\nimport React from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cardWidth = 70;\nconst cardHeight = 94;\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'K', 'Q', 'A'];\nconst suits = ['H', 'C', 'D', 'S'];\n\nfunction Card(props) {\n  var xOffset = 0;\n  var yOffset = 0;\n\n  if ('value' in props && props.value.length === 2) {\n    xOffset = values.indexOf(props.value[0], 0) + 1;\n    yOffset = suits.indexOf(props.value[1], 0);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Card\",\n    style: {\n      backgroundImage: 'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',\n      width: cardWidth + 'px',\n      height: cardHeight + 'px',\n      overflow: 'hidden',\n      backgroundPosition: -xOffset * cardWidth + 'px ' + -yOffset * cardHeight + 'px'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Card;\n\nfunction dealHand(arr, player) {\n  var out = [];\n\n  for (var i = 0; i < arr.length; i++) {\n    out.push( /*#__PURE__*/_jsxDEV(Card, {\n      value: arr[i]\n    }, (player ? 'Player' : 'Dealer') + i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 18\n    }, this));\n  }\n\n  return out;\n}\n\nfunction Hit(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Hit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Hit;\n\nfunction Stand(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: props.onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Stand\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n\n_c3 = Stand;\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    var deck = [...Array(52).keys()];\n    deck = this.shuffleDeck(deck);\n    this.state = {\n      deck: deck,\n      dealerHand: [],\n      playerHand: [],\n      isStanding: false\n    };\n    this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n    this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n    this.state.dealerHand.push(this.getCard(this.state.deck.pop()) + 'H');\n    this.state.dealerHand.push(this.getCard(this.state.deck.pop()));\n    var temp = this.state.dealerHand;\n\n    if (this.calculateScore(temp, true) === 'Blackjack!') {\n      temp[0] = temp[0].slice(0, -1);\n      this.setState({\n        deck: temp,\n        dealerHand: this.state.dealerHand,\n        playerHand: this.state.playerHand,\n        isStanding: this.state.isStanding\n      });\n    }\n  }\n\n  shuffleDeck(arr) {\n    var shuffled = [];\n\n    while (arr.length > 0) {\n      var index = Math.floor(Math.random() * arr.length);\n      var next = arr.splice(index, 1);\n      shuffled.push(next[0]);\n    }\n\n    return shuffled;\n  }\n\n  calculateScore(arr, addHidden) {\n    var out = '';\n    var score = 0;\n    var aces = 0;\n\n    for (var i = 0; i < arr.length; i++) {\n      // Don't include hidden value\n      if (!addHidden && arr[i].length > 2) {\n        out += '>';\n        continue;\n      }\n\n      var val = arr[i][0];\n\n      if (!isNaN(val)) {\n        score += parseInt(val);\n      } else if (val !== 'A') {\n        score += 10;\n      } else {\n        aces += 1;\n      }\n    }\n\n    while (aces > 0) {\n      // Add 11 if it's the last ace and it still fits\n      if (aces === 1 && score + 11 <= 21) {\n        score += 11;\n      } else {\n        score += 1;\n      }\n\n      aces--;\n    }\n\n    if (score === 21) {\n      out = 'Blackjack!';\n    } else if (score > 21) {\n      out = 'Bust!';\n    } else {\n      out += score.toString();\n    }\n\n    return out;\n  }\n\n  getCard(cardVal) {\n    var suit = Math.floor(cardVal / 13);\n    var value = cardVal % 13;\n    var out = values[value] + suits[suit];\n    return out;\n  }\n\n  handleHit() {\n    var hand = this.state.playerHand;\n\n    if (this.state.isStanding || this.calculateScore(this.state.dealerHand, true) === 'Blackjack!' || this.calculateScore(hand, false) === 'Bust!' || this.calculateScore(hand, false) === 'Blackjack!') {\n      return;\n    }\n\n    var deck = this.state.deck;\n    hand.push(this.getCard(deck.pop()));\n    this.setState({\n      deck: deck,\n      playerHand: hand,\n      dealerHand: this.state.dealerHand,\n      isStanding: this.state.isStanding\n    });\n  }\n\n  hitDealer() {}\n\n  handleStand() {\n    this.setState({\n      deck: this.state.deck,\n      dealerHand: this.state.dealerHand,\n      playerHand: this.state.playerHand,\n      isStanding: true\n    });\n  }\n\n  getStateText() {\n    var out = '';\n\n    if (this.state.isStanding) {\n      if (this.calculateScore(this.state.playerHand, false) > this.calculateScore(this.state.dealerHand, false)) {\n        out = 'You Win!';\n      } else {\n        out = 'Dealer Wins.';\n      }\n    }\n\n    return out;\n  }\n\n  componentDidMount() {\n    if (this.state.isStanding()) {\n      this.hitDealer();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Hand\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"You: \", this.calculateScore(this.state.playerHand, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 78\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: dealHand(this.state.playerHand, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Dealer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: dealHand(this.state.dealerHand, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Dealer: \", this.calculateScore(this.state.dealerHand, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 81\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Hit\",\n        children: /*#__PURE__*/_jsxDEV(Hit, {\n          onClick: () => this.handleHit()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Stand\",\n        children: /*#__PURE__*/_jsxDEV(Stand, {\n          onClick: () => this.handleStand()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"EndText\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: this.getStateText()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Game;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Hit\");\n$RefreshReg$(_c3, \"Stand\");","map":{"version":3,"sources":["/home/michael/blackjack/src/Game/index.js"],"names":["React","cardWidth","cardHeight","values","suits","Card","props","xOffset","yOffset","value","length","indexOf","backgroundImage","width","height","overflow","backgroundPosition","dealHand","arr","player","out","i","push","Hit","onClick","Stand","Table","Component","constructor","deck","Array","keys","shuffleDeck","state","dealerHand","playerHand","isStanding","getCard","pop","temp","calculateScore","slice","setState","shuffled","index","Math","floor","random","next","splice","addHidden","score","aces","val","isNaN","parseInt","toString","cardVal","suit","handleHit","hand","hitDealer","handleStand","getStateText","componentDidMount","render","Game"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './index.css';\n\nconst cardWidth = 70;\nconst cardHeight = 94;\n\nconst values = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'K', 'Q', 'A']\nconst suits = ['H', 'C', 'D', 'S'];\n\nfunction Card(props) {\n    var xOffset = 0;\n    var yOffset = 0;\n\n    if ('value' in props && props.value.length === 2) {\n        xOffset = values.indexOf(props.value[0], 0) + 1;\n        yOffset = suits.indexOf(props.value[1], 0);\n    }\n    \n    return (\n        <div\n         className='Card'\n         style={{backgroundImage: 'url(https://img.itch.zone/aW1hZ2UvNzE1Mzg3LzM5NjQ5MzEucG5n/original/iwG3hK.png)',\n                 width: cardWidth + 'px',\n                 height: cardHeight + 'px',\n                 overflow: 'hidden',\n                 backgroundPosition: -xOffset * cardWidth + 'px ' + -yOffset * cardHeight + 'px'\n               }}\n        />\n    );\n}\n\nfunction dealHand(arr, player) {\n    var out = [];\n    for (var i = 0; i < arr.length; i++) {\n        out.push(<Card key={(player ? 'Player' : 'Dealer') + i} value={arr[i]} />);\n    }\n    return (out);\n}\n\nfunction Hit(props) {\n    return (\n        <div onClick={props.onClick}>\n         <b>Hit</b><br />\n         <Card />\n        </div>\n    );\n}\n\nfunction Stand(props) {\n    return (\n        <div onClick={props.onClick}>\n         <b>Stand</b><br />\n         <Card />\n        </div>\n    );\n}\n\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        var deck = [...Array(52).keys()]\n        deck = this.shuffleDeck(deck);\n        this.state = {\n            deck: deck,\n            dealerHand: [],\n            playerHand: [],\n            isStanding: false,\n        };\n\n        this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n        this.state.playerHand.push(this.getCard(this.state.deck.pop()));\n        \n        this.state.dealerHand.push(this.getCard(this.state.deck.pop()) + 'H');\n        this.state.dealerHand.push(this.getCard(this.state.deck.pop()));\n\n        var temp = this.state.dealerHand;\n        if (this.calculateScore(temp, true) === 'Blackjack!') {\n            temp[0] = temp[0].slice(0,-1);\n            this.setState({\n                deck: temp,\n                dealerHand: this.state.dealerHand,\n                playerHand: this.state.playerHand,\n                isStanding: this.state.isStanding,\n            });\n        }\n    }\n\n    shuffleDeck(arr) {\n        var shuffled = [];\n\n        while (arr.length > 0) {\n            var index = Math.floor(Math.random() * arr.length);\n            var next = arr.splice(index, 1);\n            shuffled.push(next[0]);\n        }\n        return shuffled;\n    }\n\n    calculateScore(arr, addHidden) {\n        var out = '';\n        var score = 0;\n        var aces = 0;\n        for (var i = 0; i < arr.length; i++) {\n            // Don't include hidden value\n            if (!addHidden && arr[i].length > 2) {\n                out += '>';\n                continue;\n            }\n            var val = arr[i][0];\n            if (!isNaN(val)) {\n                score += parseInt(val);\n            } \n            else if (val !== 'A') {\n                score += 10;\n            }\n            else {\n                aces += 1\n            }\n\n        }\n\n        while (aces > 0) {\n            // Add 11 if it's the last ace and it still fits\n            if (aces === 1 && (score + 11) <= 21) {\n                score += 11;\n            }\n            else {\n                score += 1;\n            }\n            aces--;\n        }\n\n        if (score === 21) {\n            out = 'Blackjack!';\n        }\n        else if (score > 21) {\n            out = 'Bust!'\n        }\n        else {\n            out += score.toString();\n        }\n\n        return out;\n    }\n\n    getCard(cardVal) {\n        var suit = Math.floor(cardVal / 13);\n        var value = cardVal % 13;\n        var out = values[value] + suits[suit]\n        return out;\n    }\n\n    handleHit() {\n        var hand = this.state.playerHand;\n        if (this.state.isStanding ||\n            this.calculateScore(this.state.dealerHand, true) === 'Blackjack!' ||\n            this.calculateScore(hand, false) === 'Bust!' ||\n            this.calculateScore(hand, false) === 'Blackjack!') {\n            return;\n        }\n        var deck = this.state.deck;\n        hand.push(this.getCard(deck.pop()));\n        this.setState({\n            deck: deck,\n            playerHand: hand,\n            dealerHand: this.state.dealerHand,\n            isStanding: this.state.isStanding,\n        });\n    }\n\n    hitDealer() {\n    }\n\n    handleStand() {\n       this.setState({                        \n           deck: this.state.deck,                        \n           dealerHand: this.state.dealerHand, \n           playerHand: this.state.playerHand, \n           isStanding: true, \n       });                                    \n    }\n\n    getStateText() {\n        var out = '';\n        if (this.state.isStanding) {\n            if (this.calculateScore(this.state.playerHand, false) > this.calculateScore(this.state.dealerHand, false)) {\n                out = 'You Win!';\n            }\n            else {\n                out = 'Dealer Wins.';\n            }\n        }\n        return out;\n    }\n\n    componentDidMount() {\n        if (this.state.isStanding()) {\n            this.hitDealer();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n             <div className='Hand'>\n              <b>You: {this.calculateScore(this.state.playerHand, false)}</b><br />\n              <div>\n               {dealHand(this.state.playerHand, true)}\n              </div>\n             </div>\n             <div className='Dealer'>\n              <div>\n               {dealHand(this.state.dealerHand, false)}\n              </div>\n              <b>Dealer: {this.calculateScore(this.state.dealerHand, false)}</b><br />\n             </div>\n             <div className='Hit'>\n              <Hit onClick={() => this.handleHit()} />\n             </div>\n             <div className='Stand'>\n              <Stand  onClick={() => this.handleStand()} />\n             </div>\n             <div className='EndText'>\n              <b>{this.getStateText()}</b>\n             </div>\n            </div>\n        );\n    }\n}\n\nclass Game extends React.Component {\n    render() {\n        return (\n            <div className='Table'>\n             <Table />\n            </div>\n        );\n    }\n}\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}